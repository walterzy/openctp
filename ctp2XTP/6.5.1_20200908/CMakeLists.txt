cmake_minimum_required(VERSION 2.8)

set(mdapi thostmduserapi_se_6.5.1_20200908)
project(${mdapi})

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
  add_definitions(-D ISLIB -D LIB_MD_API_EXPORT -D V6_5_1)
  set(boost_include E:/boost_1_73_0)
  set(boost_lib E:/boost_1_73_0/stage/lib)
else()
  add_compile_options(-std=c++11 -pthread)
  add_definitions(-D V6_5_1)
  set(boost_include /usr/local/include)
  set(boost_lib /usr/local/lib)
endif()

include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/.. ${boost_include})
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
  link_directories(${PROJECT_SOURCE_DIR}/win64 ${boost_lib})
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  link_directories(${PROJECT_SOURCE_DIR}/lin64 ${boost_lib})
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  link_directories(${PROJECT_SOURCE_DIR}/mac64 ${boost_lib})
endif()

add_library(${mdapi} SHARED ../FtdcMdApiImpl.cpp)
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
  target_link_libraries(${mdapi} xtpquoteapi.lib)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  target_link_libraries(${mdapi} -lxtpquoteapi)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  target_link_libraries(${mdapi} -lxtpquoteapi -lpthread -lboost_system -lboost_thread)
endif()
set_target_properties(${mdapi} PROPERTIES OUTPUT_NAME "thostmduserapi_se")
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR})
